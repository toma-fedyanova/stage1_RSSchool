import { InfoTask } from '../types/type';
export 
const taskText: Record<string, InfoTask> = {
  '1': {
  title: 'Универсальный селектор',
  context: 'Он применяет стили ко всем элементам страницы и обозначается символом * (звёздочка).',
  example: 
  `* {
    margin: 0;
    box-sizing: border-box;
  }`,
  task: 'Задание: выберите всех животных на машине.'},
  '2': {
  title: 'Селектор по тегу (элементу).',
  context: 'Этот селектор CSS применяет стили ко всем элементам с одинаковым тегом. Например, для всех <div>, <h2>, <p>.',
  example: 
  `a {
		text-decoration: none;
  }`,
  task: 'Задание: выберите всех котов на машине'},
  '3': {
  title: 'Селектор по идентификатору (id).',
  context: 'Селектор по идентификатору обозначается символом # (решётка) и применяет стили к элементу, для которого задан атрибут id с соответствующим значением.',
  example: 
  `<p id="intro">Сегодня мы расскажем вам об Emmet.</p> 
  #intro{
		color: red;
		font-weight: bold;
	}`,
  task: 'Задание: выберите птицу на машине'},
  '4': {
  title: 'Селектор по классу (class).',
  context: 'CSS-селектор по классу выбирает элементы, для которых назначен атрибут class с соответствующим значением. При этом один элемент может принадлежать нескольким классам — в таком случае их перечисляют через пробел.',
  example: 
  `<p class="plain_text article">Сегодня мы не расскажем вам про Emmet.</p>  
  .plain_text{
		font-size: 20px;
	}`,
  task: 'Задание: выберите всех собак на машине'},
  '5': {
  title: 'Выбрать потомков первого уровня.',
  context: 'Если нужно применить CSS-стили к потомкам B элемента A только на первом уровне вложенности, то вместо пробела пишут символ >.',
  example: 
  `.container > img {
    margin-bottom: 40px;
   }`,
  task: 'Задание: выберите всех рыбок у кота'},
  '6': {
  title: 'CSS-селекторы по атрибуту (по имени и значению атрибута).',
  context: 'Они позволяют выбрать элемент по имени атрибута, его значению или части значения. Может работать по имени и значению атрибута [attr=value].',
  example: 
  `[title="what_is"] {
		font-weight: normal;
	 }`,
  task: 'Задание: выберите всех котиков с именем Пушок'},
  '7': {
  title: 'CSS-селекторы по атрибуту (с заданным атрибутом).',
  context: 'Они позволяют выбрать элемент по имени атрибута, его значению или части значения. [attr^=value] Находит элементы с заданным атрибутом, значение которого начинается с value.',
  example: 
  `[class^="form"] {
		background-color: #7aacba;
	}`,
  task: 'Задание: выберите всех собак с именем, включающем "мар".'}, //маркиз, мартин
  '8': {
  title: 'CSS-селекторы по атрибуту (с заданным атрибутом).',
  context: 'Они позволяют выбрать элемент по имени атрибута, его значению или части значения. [attr$=value] Находит элементы с заданным атрибутом, значение которого заканчивается на value.',
  example: 
  ` [class$="primary"] {
		font-weight: bold;
	 }`,
  task: 'Задание: выберите всех котиков с именем, заканчивающимся на "мар".'}, //алекс, бакс
  '9': {
  title: 'Псевдоклассы.',
  context: 'Псевдокласс выбирает элементы, находящиеся в определённом состоянии или положении в иерархии DOM.',
  example: 
  ` a:hover {
		font-size: 20px;
	}`,
  task: 'Задание: выберите животного, на которое наведен курсор.'},
  '10': {
  title: 'CSS-селектор :not.',
  context: 'Выбирать можно элементы без класса, без alt, label без for и другие ошибки, без полей форм.',
  example: 
  ` ul:not([class]) li {
    text-decoration: none
  }`,
  task: 'Задание: выберите животного, не собаку.'},
}